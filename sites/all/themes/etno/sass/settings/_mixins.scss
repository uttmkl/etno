// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin media($media) {
  @if $media == small {
    @media only screen and (max-width: $small-breakpoint) {
      @content;
    }
  } @else if $media == medium {
    @media only screen and (max-width: $medium-breakpoint) {
      @content;
    }
  } @else if $media == large {
    @media only screen and (max-width: $large-breakpoint) and (min-width: $medium-breakpoint + 1) {
      @content;
    }
  } @else if $media == tablet {
    @media only screen and (max-width: $tablet-breakpoint) and (min-width: $medium-breakpoint) {
      @content;
    }
  }
}

@mixin button() {
  background-color: #71470e;
  @include background-image(
    image-url("../images/btn-bg.png"),
    linear-gradient(to bottom, #662502, #71470e)
  );
  background-repeat: no-repeat;
  background-position: left center;
  color: $btn_color;
  border: 1px solid #4a2e1d;
  padding: 0 10px 0 35px;
  line-height: 22px;
  @include border-radius(3px);

  &:hover {
    @include background-image(
      image-url("../images/btn-bg.png"),
      linear-gradient(to bottom, #71470e, #662502)
    );
  }
}

@mixin link() {
  color: $link_color;
  @include transition(all 0.5s ease);

  &:hover {
    color: $main_color;
    text-decoration: underline;
  }
}

@mixin form-input() {
  background: $border_color;
  border: #662502;
}

@mixin form-label() {

}

@mixin fieldset() {
  border-color: $border_color;
}

@mixin image() {
  padding: 3px;
  background: #4F2F1D;
  border: 1px solid #2E190D;
  vertical-align: middle;
  width: 100%;
  height: auto;
  box-sizing: border-box;
}

@mixin video-icon() {
  position: relative;
  display: block;

  &:after {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -40px 0 0 -40px;
    width: 80px;
    height: 80px;
    background: url(../images/play.png) no-repeat center;
    background-size: contain;
    @include transition(all 0.1s);
  }

  &:hover {
    &:after {
      width: 90px;
      height: 90px;
      margin: -45px 0 0 -45px;
    }
  }

  img {
    @include image();
    border: $light_border;
  }
}

@mixin gradient() {
  background: rgba(74, 44, 29, 1);
  background: -moz-linear-gradient(top, rgba(74, 44, 29, 1) 0%, rgba(68, 36, 18, 1) 100%);
  background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(74, 44, 29, 1)), color-stop(100%, rgba(68, 36, 18, 1)));
  background: -webkit-linear-gradient(top, rgba(74, 44, 29, 1) 0%, rgba(68, 36, 18, 1) 100%);
  background: -o-linear-gradient(top, rgba(74, 44, 29, 1) 0%, rgba(68, 36, 18, 1) 100%);
  background: -ms-linear-gradient(top, rgba(74, 44, 29, 1) 0%, rgba(68, 36, 18, 1) 100%);
  background: linear-gradient(to bottom, rgba(74, 44, 29, 1) 0%, rgba(68, 36, 18, 1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#4a2c1d', endColorstr='#442412', GradientType=0);
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
  }
}